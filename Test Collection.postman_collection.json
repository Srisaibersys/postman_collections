{
	"variables": [],
	"info": {
		"name": "Test Collection",
		"_postman_id": "d241cb5d-d66f-7b9f-37bf-e7d69a95bc89",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "osss distributor snmpV2",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"id\": \"http://osss-snmp-distributor.u1.app.cloud.comcast.net/v1.0/api/distribute\",\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"68.85.14.4\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"ip\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    \r",
							"for (i in data) {\r",
							"  console.log(i, '= ', data[i]);\r",
							"}\r",
							"  \r",
							"    var ip= data.ip;\r",
							"    console.log(ip);\r",
							"    \r",
							"        var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"        for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++){ \r",
							"            var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"            var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"            tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"            \r",
							"            var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"            var result = obj.result;\r",
							"            tests[testResult] = result.status === \"success\" && result.statusCode === \"0\";\r",
							"            \r",
							"            var ResultResponseTime = ip + \" => Result response time should not be greater than 3000 ms. for element \" + i;   \r",
							"            var timeWithUnit = result.responseTime;    \r",
							"            var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());          \r",
							"            tests[ResultResponseTime] = time <= 3000;\r",
							"            \r",
							"            var resultResultResultList = result.result.resultList;\r",
							"            \r",
							"    //Verifying resultListSize\r",
							"    \r",
							"    var resultListSize = \":: ResultListSize should not be greater than 20 for element \" + i;\r",
							"    var resultResult = result.result.resultListSize;\r",
							"    //var size = result.result.resultList;\r",
							"    tests[resultListSize] = resultResult > 0;\r",
							"    \r",
							"    //Verifying deviceTrips\r",
							"    \r",
							"    var deviceTrips = \":: DeviceTrips should be greater than 0 for element \" + i;\r",
							"    var resultResult = result.result.deviceTrips;\r",
							"    tests[deviceTrips] = resultResult > 0;\r",
							"        \r",
							"            for(j = 0; j < resultResultResultList.length; j++){\r",
							"                \r",
							"                var result = resultResultResultList[j];\r",
							"                \r",
							"               /* var ip_test = ip + \" => Ip should be \" + ip + \" for \" + j + \" element in resultList of element \" + i;\r",
							"                tests[ip_test] = result.ip === ip;*/\r",
							"                var error = ip + \" => there should not be error in the \" + j + \" element in resultList of element \" + i;\r",
							"                tests[error] = result.errorMessage ===  null && result.errStatus === 0 && result.errText === \"Success\";\r",
							"                \r",
							"            }\r",
							"        }\r",
							"    \r",
							"});\r",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*var jq = document.createElement('script');\r",
							"jq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\";\r",
							"// document.getElementsByTagName('head')[0].appendChild(jq);\r",
							"\r",
							"$.ajax({\r",
							"  type: 'POST',\r",
							"  url: \"https://websec-dev.cable.comcast.com/as/token.oauth2\" ,\r",
							"  data: {\r",
							"      grant_type: \"client_credentials\",\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: \"smanda005c\",\r",
							"      client_secret: \"73d2256f34cc416282509fcd8462cb5a\"\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  \r",
							"});\r",
							"\r",
							"/*$.ajax({\r",
							"  type: 'POST',\r",
							"  url: environment.auth_url ,\r",
							"  data: {\r",
							"      grant_type: environment.grant_type,\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: environment.api_client_id,\r",
							"      client_secret: environment.api_client_secret\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  postman.setEnvironmentVariable(\"access_token\", data.access_token);\r",
							"});\r",
							"\r",
							"\r",
							"// Use backbone to login\r",
							"Login = Backbone.Collection.extend({\r",
							"    url: environment.auth_url\r",
							"});\r",
							"\r",
							"var login = new Login();\r",
							"\r",
							"console.log(login)\r",
							"\r",
							"login.fetch({\r",
							"    beforeSend: function(xhr) {\r",
							"        // use the right content type\r",
							"        xhr.setRequestHeader('Content-Type', 'application/json');\r",
							"    },\r",
							"    type: 'POST',\r",
							"    data: JSON.stringify({\r",
							"        \"grant_type\": environment.grant_type,\r",
							"        \"client_id\": environment.api_client_id,\r",
							"        \"client_secret\": environment.api_client_secret,\r",
							"       // \"username\": environment.api_username,\r",
							"       // \"password\": environment.api_password\r",
							"    }),\r",
							"    success: function(data, array) {\r",
							"        // make it so you can access it via {{access_token}}\r",
							"        console.log(\"In sucess\");\r",
							"        console.log(array.data);\r",
							"        postman.setEnvironmentVariable('access_token', array.data.access_token); \r",
							"    }\r",
							"});*/"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk2MTA1NTk0LCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.YFvocCOmQez-fgEhSx99DH8BZLN8qYpx9UOuC0qM_ZBBzdNDOnZI8gRv2jyPb4wQkwR--xboK6djCaDuw_-e-DAjmr3mzDefI80KMjcuFmN3zfJyGFSWHrJS5NtHZJg_ck3LvL4XZHxtcpcOSMS4EWF8OnHYdYgf9DFz0CgsAjAJf-zgQCGkPNX1laXLmwZHVq9Gzwt50qYgfY02j143iwpLS6FXWhnq6z7mPVNDZPPg6zOalFdOB1ZaxJc_nkAxmuiUVIaEm72JCCUcZOIbNpGOPAG7nMNAxoGfATjEto21cu4cPYvtKN-woM1TKgh_etsFWEkMfL2bACcUGIsL1g",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{ip}}\",\n         \"delay\":\"100\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"3000\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3\"\n            },\n            {\n               \"operationName\": \"getBulk\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"3000\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"maxrepetitions\":\"10\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3,1.3.6.1.2.1.1.1.0,1.3.6.1.2.1.1.2.0\"\n            }\n         ]\n      }\n   ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "api/distribute for SNMPV3",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"// console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"2001:0558:4070:003f:16cf:e2ff:fe14:a6a2\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"ip\": {\r",
							"                                                            \"type\": \"string\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"id\": \"/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"id\": \"/properties/statusCode\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    \r",
							"    var ip= environment.ip1;\r",
							"    console.log(ip);\r",
							"    \r",
							"        var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"        for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++){ \r",
							"            var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"            var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"            tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"            \r",
							"            var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"            var result = obj.result;\r",
							"            tests[testResult] = result.status === \"success\" && result.statusCode === \"0\";\r",
							"            \r",
							"            var ResultResponseTime = ip + \" => Result response time should not be greater than 3000 ms. for element \" + i;   \r",
							"            var timeWithUnit = result.responseTime;    \r",
							"            var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());          \r",
							"            tests[ResultResponseTime] = time <= 3000;\r",
							"            \r",
							"        var resultListSize = \":: ResultListSize should not be greater than 20 for element \" + i;\r",
							"        var resultResult = result.result.resultListSize;\r",
							"        var size = result.result.resultList;\r",
							"        tests[resultListSize] = resultResult === size.length;\r",
							"        \r",
							"        var deviceTrips = \":: DeviceTrips should be greater than 0 for element \" + i;\r",
							"        var resultResult1 = result.result.deviceTrips;\r",
							"        tests[deviceTrips] = resultResult1 > 0;\r",
							"        \r",
							"        var resultResultResultList = result.result.resultList;\r",
							"            \r",
							"            for(j = 0; j < resultResultResultList.length; j++){\r",
							"                \r",
							"                var result1 = resultResultResultList[j];\r",
							"               // var ip_test = ip + \" => Ip should be \" + ip + \" for \" + j + \" element in resultList of element \" + i;\r",
							"               // tests[ip_test] = result.ip === ip;\r",
							"                var error = ip + \" => there should not be error in the \" + j + \" element in resultList of element \" + i;\r",
							"                tests[error] = result1.errorMessage ===  null && result1.errStatus === 0 && result1.errText === \"Success\";\r",
							"                \r",
							"            }\r",
							"        }\r",
							"    \r",
							"});"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk2MTA1NjM3LCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.mZtEqOOF_rij0tFfiN6YgCoBa4CTEzR5_51_Dcp-C6_AOmV2tOcYKS6iW4dEqRypMZQJhyajtUlD04zJm3OuDQ5wssWVY6vbf5tMFwJOWG-btCd6uD3zeROg5luqKb8g3bZ2a8S9HXQ_8apPQF6U8sZJgmpyk6N1K2KCVzvVrg_MwFZsblvYZRAvPFbprVH8CsmOhgZAaw0D_5Hb3eGmGM1_A3NIIDpUzj2AcAkZnyoCqWh_EueBlsKbJ4foqHwoXOyUR1uYuRM5xY_5uIk3A1AY5PIodDTdLoVBUXHrbS1xe17Sjl9UbOqqe1CSV0ZiE_YbGz7E3R9GrVRk8HJ2kg",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"requests\": [\r\n      {\r\n         \"category\":\"read\",\r\n         \"ip\":\"{{ip1}}\",\r\n         \"delay\":\"100\",\r\n         \"snmpVersion\": \"v3\",\r\n         \"operationList\": [\r\n            {\r\n               \"operationName\": \"get\",\r\n               \"securityname\": \"docsisManager\",\r\n               \"securitylevel\": \"authPriv\",\r\n               \"authkey\": \"68ac57a68293af890df8de902b21aa7d\",\r\n               \"privkey\": \"89d6938b884ebb0be124246c8af246ca\",\r\n               \"snmptimeout\": \"3000\",\r\n               \"retries\": \"0\",\r\n               \"partitions\": \"1\",\r\n               \"throttle\": \"1\",\r\n               \"responsetimeout\": \"5000\",\r\n               \"oid\": \"1.3.6.1.2.1.1.1.0\"\r\n            }\r\n         ]\r\n      }\r\n    ]\r\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "osss distributor snmpV2 - SNMP Timeout < 10ms",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"id\": \"http://osss-snmp-distributor.u1.app.cloud.comcast.net/v1.0/api/distribute\",\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"68.85.14.4\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"ip\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    var ip = environment.ip_temp;\r",
							"    var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"    for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++) {\r",
							"        \r",
							"        var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"        \r",
							"        var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"        tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"        \r",
							"        // result\r",
							"        var result = obj.result;\r",
							"        var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"        tests[testResult] = result.status === \"failure\" && result.statusCode === \"1\";\r",
							"        \r",
							"       \r",
							"       // response time\r",
							"        var timeWithUnit = result.responseTime;    \r",
							"        var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());  \r",
							"        var ResultResponseTime = ip + \" => Result response time should be greater than 10 ms. for element \" + i;   \r",
							"        tests[ResultResponseTime] = time > 10;\r",
							"        \r",
							"        // error message\r",
							"        var message = ip + \"verify error message for element\" + i;\r",
							"        tests[message] = result.message === \"OSSS-1003 : Exception while processing request (SNMP Timeout : Exceeded 10ms)\";\r",
							"    }\r",
							"});\r",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*var jq = document.createElement('script');\r",
							"jq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\";\r",
							"// document.getElementsByTagName('head')[0].appendChild(jq);\r",
							"\r",
							"$.ajax({\r",
							"  type: 'POST',\r",
							"  url: \"https://websec-dev.cable.comcast.com/as/token.oauth2\" ,\r",
							"  data: {\r",
							"      grant_type: \"client_credentials\",\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: \"smanda005c\",\r",
							"      client_secret: \"73d2256f34cc416282509fcd8462cb5a\"\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  \r",
							"});\r",
							"\r",
							"/*$.ajax({\r",
							"  type: 'POST',\r",
							"  url: environment.auth_url ,\r",
							"  data: {\r",
							"      grant_type: environment.grant_type,\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: environment.api_client_id,\r",
							"      client_secret: environment.api_client_secret\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  postman.setEnvironmentVariable(\"access_token\", data.access_token);\r",
							"});\r",
							"\r",
							"\r",
							"// Use backbone to login\r",
							"Login = Backbone.Collection.extend({\r",
							"    url: environment.auth_url\r",
							"});\r",
							"\r",
							"var login = new Login();\r",
							"\r",
							"console.log(login)\r",
							"\r",
							"login.fetch({\r",
							"    beforeSend: function(xhr) {\r",
							"        // use the right content type\r",
							"        xhr.setRequestHeader('Content-Type', 'application/json');\r",
							"    },\r",
							"    type: 'POST',\r",
							"    data: JSON.stringify({\r",
							"        \"grant_type\": environment.grant_type,\r",
							"        \"client_id\": environment.api_client_id,\r",
							"        \"client_secret\": environment.api_client_secret,\r",
							"       // \"username\": environment.api_username,\r",
							"       // \"password\": environment.api_password\r",
							"    }),\r",
							"    success: function(data, array) {\r",
							"        // make it so you can access it via {{access_token}}\r",
							"        console.log(\"In sucess\");\r",
							"        console.log(array.data);\r",
							"        postman.setEnvironmentVariable('access_token', array.data.access_token); \r",
							"    }\r",
							"});*/"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk0OTgyODYyLCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.DPGQa8cwjeHQw3Uyw-p_QdeOKgRetY_fhM4Te8tsidqm13cImPQj2Amibpo5tKdR_7Xp2JCY8VGHVKbmYq3h7JDnZxiFmcL_h8aOv0k9t9OF2Fiuh-8p_IUZaMks0hyfj9tYfd4N2MPNIzwVnvrmsneZBWKcVDrSjfHs2AxGlDSfHAxEVidpFMaSdp9KznRV0uMhbqUSEgIl8jr9__AU8yEpZeWcvWnOQ4dLFHXkviIdqX0RoFwiPsZQ2axfB5T2mofYYYC3yPDSMxy06zk-wi3zpFX2LuWCvmWHbxs-SvamofPV4XfavUX70_GqsyRIeJ3UK9c0CHM2sZoB4b769A",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{ip_temp}}\",\n         \"delay\":\"100\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\t\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"10\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3\"\n            }\n         ]\n      }\n   ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "osss distributor snmpV2 - Incorrect Retry format",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"id\": \"http://osss-snmp-distributor.u1.app.cloud.comcast.net/v1.0/api/distribute\",\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"68.85.14.4\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"ip\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    var ip = environment.ip_temp;\r",
							"    var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"    for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++) {\r",
							"        \r",
							"        var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"        \r",
							"        var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"        tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"        \r",
							"        // result\r",
							"        var result = obj.result;\r",
							"        var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"        tests[testResult] = result.status === \"failure\" && result.statusCode === \"1\";\r",
							"        \r",
							"       \r",
							"       // response time\r",
							"        var timeWithUnit = result.responseTime;    \r",
							"        var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());  \r",
							"        var ResultResponseTime = ip + \" => Result response time should be 0 ms. for element \" + i;   \r",
							"        tests[ResultResponseTime] = time === 0;\r",
							"        \r",
							"        // error message\r",
							"        var message = ip + \"verify error message for element\" + i;\r",
							"        tests[message] = result.message === \"OSSS-1003 : Exception while processing request ([\\\"Parameter value 1.0 for retries does not match the given pattern ^[0-9]\\\\\\\\d*$\\\"])\";\r",
							"    }\r",
							"});\r",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*var jq = document.createElement('script');\r",
							"jq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\";\r",
							"// document.getElementsByTagName('head')[0].appendChild(jq);\r",
							"\r",
							"$.ajax({\r",
							"  type: 'POST',\r",
							"  url: \"https://websec-dev.cable.comcast.com/as/token.oauth2\" ,\r",
							"  data: {\r",
							"      grant_type: \"client_credentials\",\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: \"smanda005c\",\r",
							"      client_secret: \"73d2256f34cc416282509fcd8462cb5a\"\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  \r",
							"});\r",
							"\r",
							"/*$.ajax({\r",
							"  type: 'POST',\r",
							"  url: environment.auth_url ,\r",
							"  data: {\r",
							"      grant_type: environment.grant_type,\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: environment.api_client_id,\r",
							"      client_secret: environment.api_client_secret\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  postman.setEnvironmentVariable(\"access_token\", data.access_token);\r",
							"});\r",
							"\r",
							"\r",
							"// Use backbone to login\r",
							"Login = Backbone.Collection.extend({\r",
							"    url: environment.auth_url\r",
							"});\r",
							"\r",
							"var login = new Login();\r",
							"\r",
							"console.log(login)\r",
							"\r",
							"login.fetch({\r",
							"    beforeSend: function(xhr) {\r",
							"        // use the right content type\r",
							"        xhr.setRequestHeader('Content-Type', 'application/json');\r",
							"    },\r",
							"    type: 'POST',\r",
							"    data: JSON.stringify({\r",
							"        \"grant_type\": environment.grant_type,\r",
							"        \"client_id\": environment.api_client_id,\r",
							"        \"client_secret\": environment.api_client_secret,\r",
							"       // \"username\": environment.api_username,\r",
							"       // \"password\": environment.api_password\r",
							"    }),\r",
							"    success: function(data, array) {\r",
							"        // make it so you can access it via {{access_token}}\r",
							"        console.log(\"In sucess\");\r",
							"        console.log(array.data);\r",
							"        postman.setEnvironmentVariable('access_token', array.data.access_token); \r",
							"    }\r",
							"});*/"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk0OTgyODYyLCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.DPGQa8cwjeHQw3Uyw-p_QdeOKgRetY_fhM4Te8tsidqm13cImPQj2Amibpo5tKdR_7Xp2JCY8VGHVKbmYq3h7JDnZxiFmcL_h8aOv0k9t9OF2Fiuh-8p_IUZaMks0hyfj9tYfd4N2MPNIzwVnvrmsneZBWKcVDrSjfHs2AxGlDSfHAxEVidpFMaSdp9KznRV0uMhbqUSEgIl8jr9__AU8yEpZeWcvWnOQ4dLFHXkviIdqX0RoFwiPsZQ2axfB5T2mofYYYC3yPDSMxy06zk-wi3zpFX2LuWCvmWHbxs-SvamofPV4XfavUX70_GqsyRIeJ3UK9c0CHM2sZoB4b769A",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{ip_temp}}\",\n         \"delay\":\"100\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"10\",\n               \"retries\": \"1.0\",\n               \"partitions\": \"1\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3\"\n            }\n         ]\n      }\n   ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "osss distributor snmpV2 - Incorrect Retry & Partitions format",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"id\": \"http://osss-snmp-distributor.u1.app.cloud.comcast.net/v1.0/api/distribute\",\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"68.85.14.4\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"ip\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    var ip = environment.ip_temp;\r",
							"    var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"    for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++) {\r",
							"        \r",
							"        var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"        \r",
							"        var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"        tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"        \r",
							"        // result\r",
							"        var result = obj.result;\r",
							"        var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"        tests[testResult] = result.status === \"failure\" && result.statusCode === \"1\";\r",
							"        \r",
							"       \r",
							"       // response time\r",
							"        var timeWithUnit = result.responseTime;    \r",
							"        var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());  \r",
							"        var ResultResponseTime = ip + \" => Result response time should be 0 ms. for element \" + i;   \r",
							"        tests[ResultResponseTime] = time > 0;\r",
							"        \r",
							"        // error message\r",
							"        var message = ip + \"verify error message for element\" + i;\r",
							"        tests[message] = result.message === \"OSSS-1003 : Exception while processing request ([\\\"Parameter value -34 for retries does not match the given pattern ^[0-9]\\\\\\\\d*$\\\",\\\"Parameter value hj for partitions does not match the given pattern ^[0]*[1-9]\\\\\\\\d*$\\\"])\";\r",
							"    }\r",
							"});\r",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*var jq = document.createElement('script');\r",
							"jq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\";\r",
							"// document.getElementsByTagName('head')[0].appendChild(jq);\r",
							"\r",
							"$.ajax({\r",
							"  type: 'POST',\r",
							"  url: \"https://websec-dev.cable.comcast.com/as/token.oauth2\" ,\r",
							"  data: {\r",
							"      grant_type: \"client_credentials\",\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: \"smanda005c\",\r",
							"      client_secret: \"73d2256f34cc416282509fcd8462cb5a\"\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  \r",
							"});\r",
							"\r",
							"/*$.ajax({\r",
							"  type: 'POST',\r",
							"  url: environment.auth_url ,\r",
							"  data: {\r",
							"      grant_type: environment.grant_type,\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: environment.api_client_id,\r",
							"      client_secret: environment.api_client_secret\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  postman.setEnvironmentVariable(\"access_token\", data.access_token);\r",
							"});\r",
							"\r",
							"\r",
							"// Use backbone to login\r",
							"Login = Backbone.Collection.extend({\r",
							"    url: environment.auth_url\r",
							"});\r",
							"\r",
							"var login = new Login();\r",
							"\r",
							"console.log(login)\r",
							"\r",
							"login.fetch({\r",
							"    beforeSend: function(xhr) {\r",
							"        // use the right content type\r",
							"        xhr.setRequestHeader('Content-Type', 'application/json');\r",
							"    },\r",
							"    type: 'POST',\r",
							"    data: JSON.stringify({\r",
							"        \"grant_type\": environment.grant_type,\r",
							"        \"client_id\": environment.api_client_id,\r",
							"        \"client_secret\": environment.api_client_secret,\r",
							"       // \"username\": environment.api_username,\r",
							"       // \"password\": environment.api_password\r",
							"    }),\r",
							"    success: function(data, array) {\r",
							"        // make it so you can access it via {{access_token}}\r",
							"        console.log(\"In sucess\");\r",
							"        console.log(array.data);\r",
							"        postman.setEnvironmentVariable('access_token', array.data.access_token); \r",
							"    }\r",
							"});*/"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk0OTgyODYyLCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.DPGQa8cwjeHQw3Uyw-p_QdeOKgRetY_fhM4Te8tsidqm13cImPQj2Amibpo5tKdR_7Xp2JCY8VGHVKbmYq3h7JDnZxiFmcL_h8aOv0k9t9OF2Fiuh-8p_IUZaMks0hyfj9tYfd4N2MPNIzwVnvrmsneZBWKcVDrSjfHs2AxGlDSfHAxEVidpFMaSdp9KznRV0uMhbqUSEgIl8jr9__AU8yEpZeWcvWnOQ4dLFHXkviIdqX0RoFwiPsZQ2axfB5T2mofYYYC3yPDSMxy06zk-wi3zpFX2LuWCvmWHbxs-SvamofPV4XfavUX70_GqsyRIeJ3UK9c0CHM2sZoB4b769A",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{ip_temp}}\",\n         \"delay\":\"100\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"10\",\n               \"retries\": \"-34\",\n               \"partitions\": \"hj\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3\"\n            }\n         ]\n      }\n   ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "osss distributor snmpV2 - Incorrect Ip Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"id\": \"http://osss-snmp-distributor.u1.app.cloud.comcast.net/v1.0/api/distribute\",\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"68.85.14.4\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"ip\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    var ip = environment.invalid_ip;\r",
							"    var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"    for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++) {\r",
							"        \r",
							"        var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"        \r",
							"        var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"        tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"        \r",
							"        // result\r",
							"        var result = obj.result;\r",
							"        var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"        tests[testResult] = result.status === \"failure\" && result.statusCode === \"1\";\r",
							"        \r",
							"       \r",
							"       // response time\r",
							"        var timeWithUnit = result.responseTime;    \r",
							"        var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());  \r",
							"        var ResultResponseTime = ip + \" => Result response time should be greater than 0 ms. for element \" + i;   \r",
							"        tests[ResultResponseTime] = time >= 0;\r",
							"        \r",
							"        // error message\r",
							"        var message = ip + \"verify error message for element\" + i;\r",
							"        tests[message] = result.message === \"OSSS-1003 : Exception while processing request ([\\\"Exception while processing request ( (Invalid IP Address:AS::Ed:Le::23))\\\"])\";\r",
							"    }\r",
							"});\r",
							""
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk0OTgyODYyLCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.DPGQa8cwjeHQw3Uyw-p_QdeOKgRetY_fhM4Te8tsidqm13cImPQj2Amibpo5tKdR_7Xp2JCY8VGHVKbmYq3h7JDnZxiFmcL_h8aOv0k9t9OF2Fiuh-8p_IUZaMks0hyfj9tYfd4N2MPNIzwVnvrmsneZBWKcVDrSjfHs2AxGlDSfHAxEVidpFMaSdp9KznRV0uMhbqUSEgIl8jr9__AU8yEpZeWcvWnOQ4dLFHXkviIdqX0RoFwiPsZQ2axfB5T2mofYYYC3yPDSMxy06zk-wi3zpFX2LuWCvmWHbxs-SvamofPV4XfavUX70_GqsyRIeJ3UK9c0CHM2sZoB4b769A",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{invalid_ip}}\",\n         \"delay\":\"100\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"10\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3\"\n            }\n         ]\n      }\n   ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "api/distribute for SNMPV3 - Valid Ip without connectivity",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"// console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"2001:0558:4070:003f:16cf:e2ff:fe14:a6a2\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"ip\": {\r",
							"                                                            \"type\": \"string\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"id\": \"/properties/status\",\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"id\": \"/properties/statusCode\",\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    \r",
							"    var ip= environment.ip_without_connectivity;\r",
							"    console.log(ip)\r",
							"\r",
							"        var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"        for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++){ \r",
							"            var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"            var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"            tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"            \r",
							"            var testResult = ip + \" => Result status should be failure with status code 1 for element with message \" + i;\r",
							"            var ipResult = obj.result;\r",
							"            tests[testResult] = ipResult.status === \"failure\" && ipResult.statusCode === \"1\" && ipResult.message === \"OSSS-1003 : Exception while processing request (Internal server error : Failed to get AuthEngineId from Device:\" + ip + \"/161. Possibly, a connectivity issue.)\";\r",
							"     \r",
							"\r",
							"        var resultListSize = \":: ResultListSize should not be greater than 1 for element \" + i;\r",
							"        var resultResult = ipResult.result.resultListSize;\r",
							"        var size = ipResult.result.resultList;\r",
							"        tests[resultListSize] = resultResult === size.length;\r",
							"        \r",
							"        var deviceTrips = \"DeviceTrips should be 0 for element \" + i;\r",
							"        var resultResult1 = ipResult.result.deviceTrips;\r",
							"        tests[deviceTrips] = resultResult1 === 0;\r",
							"        \r",
							"        var resultResultResultList = ipResult.result.resultList;\r",
							"            \r",
							"            for(j = 0; j < resultResultResultList.length; j++){\r",
							"                \r",
							"                var result1 = resultResultResultList[j];\r",
							"               \r",
							"                var error = ip + \" => there should be error in the \" + j + \" element in resultList of element \" + i;\r",
							"                tests[error] = result1.errorMessage ===  \"Failed - Internal server error\" && result1.errStatus === 500 && result1.value === \"Internal server error\" && \r",
							"                result1.errText === \"Failed to get AuthEngineId from Device:\" + ip + \"/161. Possibly, a connectivity issue.\";\r",
							"                \r",
							"            }\r",
							"        }\r",
							"    \r",
							"});"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk2MTA1NjM3LCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.mZtEqOOF_rij0tFfiN6YgCoBa4CTEzR5_51_Dcp-C6_AOmV2tOcYKS6iW4dEqRypMZQJhyajtUlD04zJm3OuDQ5wssWVY6vbf5tMFwJOWG-btCd6uD3zeROg5luqKb8g3bZ2a8S9HXQ_8apPQF6U8sZJgmpyk6N1K2KCVzvVrg_MwFZsblvYZRAvPFbprVH8CsmOhgZAaw0D_5Hb3eGmGM1_A3NIIDpUzj2AcAkZnyoCqWh_EueBlsKbJ4foqHwoXOyUR1uYuRM5xY_5uIk3A1AY5PIodDTdLoVBUXHrbS1xe17Sjl9UbOqqe1CSV0ZiE_YbGz7E3R9GrVRk8HJ2kg",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{ip_without_connectivity}}\",\n         \"delay\":\"100\",\n         \"snmpVersion\": \"v3\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\n               \"securityname\": \"docsisManager\",\n               \"securitylevel\": \"authPriv\",\n               \"privkey\": \"0e13567552ab6a8ac83decfc6ad0334a\",\n               \"authkey\":\"007a53b64519284c6a2d6172cc946414\",\n               \"snmptimeout\": \"3000\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.1.1.0\"\n            }\n         ]\n      }\n      \n    ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		},
		{
			"name": "osss distributor snmpV2  - single request",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
							"\r",
							"console.log(responseBody);\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"    \"definitions\": {},\r",
							"    \"id\": \"http://osss-snmp-distributor.u1.app.cloud.comcast.net/v1.0/api/distribute\",\r",
							"    \"properties\": {\r",
							"        \"response\": {\r",
							"            \"properties\": {\r",
							"                \"resultList\": {\r",
							"                    \"items\": {\r",
							"                        \"properties\": {\r",
							"                            \"68.85.14.4\": {\r",
							"                                \"items\": {\r",
							"                                    \"properties\": {\r",
							"                                        \"result\": {\r",
							"                                            \"properties\": {\r",
							"                                                \"responseTime\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"result\": {\r",
							"                                                    \"properties\": {\r",
							"                                                        \"deviceTrips\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        },\r",
							"                                                        \"resultList\": {\r",
							"                                                            \"items\": {\r",
							"                                                                \"properties\": {\r",
							"                                                                    \"errStatus\": {\r",
							"                                                                        \"type\": \"integer\"\r",
							"                                                                    },\r",
							"                                                                    \"errText\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"errorMessage\": {\r",
							"                                                                        \"type\": \"null\"\r",
							"                                                                    },\r",
							"                                                                    \"ip\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"oid\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    },\r",
							"                                                                    \"value\": {\r",
							"                                                                        \"type\": \"string\"\r",
							"                                                                    }\r",
							"                                                                },\r",
							"                                                                \"type\": \"object\"\r",
							"                                                            },\r",
							"                                                            \"type\": \"array\"\r",
							"                                                        },\r",
							"                                                        \"resultListSize\": {\r",
							"                                                            \"type\": \"integer\"\r",
							"                                                        }\r",
							"                                                    },\r",
							"                                                    \"type\": \"object\"\r",
							"                                                },\r",
							"                                                \"status\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                },\r",
							"                                                \"statusCode\": {\r",
							"                                                    \"type\": \"string\"\r",
							"                                                }\r",
							"                                            },\r",
							"                                            \"type\": \"object\"\r",
							"                                        },\r",
							"                                        \"status\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        },\r",
							"                                        \"statusCode\": {\r",
							"                                            \"type\": \"string\"\r",
							"                                        }\r",
							"                                    },\r",
							"                                    \"type\": \"object\"\r",
							"                                },\r",
							"                                \"type\": \"array\"\r",
							"                            }\r",
							"                        },\r",
							"                        \"type\": \"object\"\r",
							"                    },\r",
							"                    \"type\": \"array\"\r",
							"                }\r",
							"            },\r",
							"            \"type\": \"object\"\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"type\": \"string\"\r",
							"        },\r",
							"        \"statusCode\": {\r",
							"            \"type\": \"string\"\r",
							"        }\r",
							"    },\r",
							"    \"type\": \"object\"\r",
							"};\r",
							"\r",
							"tests[\"Validate Data Format of Response Body\"] = tv4.validate(jsonData, schema);\r",
							"console.log(\"Validation failed: \", tv4.error);\r",
							"\r",
							"tests[\"Status should be success\"] = jsonData.status === \"success\";\r",
							"\r",
							"tests[\"Status code should be 0\"] = jsonData.statusCode === \"0\";\r",
							"\r",
							"tests[\"response should have response\"] = _.has(jsonData, \"response\");\r",
							"\r",
							"tests[\"response should contain resultList\"] = _.has(jsonData.response, \"resultList\");\r",
							"\r",
							"var resultList = jsonData.response.resultList;\r",
							"\r",
							"tests[\"resultList should not be empty\"] = resultList.length >= 1;\r",
							"\r",
							"resultList.forEach(function(result) {\r",
							"    \r",
							"for (i in data) {\r",
							"  console.log(i, '= ', data[i]);\r",
							"}\r",
							"  \r",
							"    var ip= data.ip;\r",
							"    console.log(ip);\r",
							"    \r",
							"        var ipAddressValueforfirstElementFromResultList = result[ip];\r",
							"       \r",
							"        for(i = 0; i < ipAddressValueforfirstElementFromResultList.length; i++){ \r",
							"            var obj = ipAddressValueforfirstElementFromResultList[i];\r",
							"            var testTitle = ip + \" => Status should be success with status code 0 for element \" + i ;\r",
							"            tests[testTitle] = obj.status === \"success\" && obj.statusCode === \"0\";\r",
							"            \r",
							"            var testResult = ip + \" => Result status should be success with status code 0 for element \" + i;\r",
							"            var result = obj.result;\r",
							"            tests[testResult] = result.status === \"success\" && result.statusCode === \"0\";\r",
							"            \r",
							"            var ResultResponseTime = ip + \" => Result response time should not be greater than 3000 ms. for element \" + i;   \r",
							"            var timeWithUnit = result.responseTime;    \r",
							"            var time = Number(timeWithUnit.substr(0, timeWithUnit.length - 2).trim());          \r",
							"            tests[ResultResponseTime] = time <= 3000;\r",
							"            \r",
							"            var resultResultResultList = result.result.resultList;\r",
							"            \r",
							"    //Verifying resultListSize\r",
							"    \r",
							"    var resultListSize = \":: ResultListSize should not be greater than 20 for element \" + i;\r",
							"    var resultResult = result.result.resultListSize;\r",
							"    //var size = result.result.resultList;\r",
							"    tests[resultListSize] = resultResult > 0;\r",
							"    \r",
							"    //Verifying deviceTrips\r",
							"    \r",
							"    var deviceTrips = \":: DeviceTrips should be greater than 0 for element \" + i;\r",
							"    var resultResult = result.result.deviceTrips;\r",
							"    tests[deviceTrips] = resultResult > 0;\r",
							"        \r",
							"            for(j = 0; j < resultResultResultList.length; j++){\r",
							"                \r",
							"                var result = resultResultResultList[j];\r",
							"                \r",
							"               /* var ip_test = ip + \" => Ip should be \" + ip + \" for \" + j + \" element in resultList of element \" + i;\r",
							"                tests[ip_test] = result.ip === ip;*/\r",
							"                var error = ip + \" => there should not be error in the \" + j + \" element in resultList of element \" + i;\r",
							"                tests[error] = result.errorMessage ===  null && result.errStatus === 0 && result.errText === \"Success\";\r",
							"                \r",
							"            }\r",
							"        }\r",
							"    \r",
							"});\r",
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*var jq = document.createElement('script');\r",
							"jq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\";\r",
							"// document.getElementsByTagName('head')[0].appendChild(jq);\r",
							"\r",
							"$.ajax({\r",
							"  type: 'POST',\r",
							"  url: \"https://websec-dev.cable.comcast.com/as/token.oauth2\" ,\r",
							"  data: {\r",
							"      grant_type: \"client_credentials\",\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: \"smanda005c\",\r",
							"      client_secret: \"73d2256f34cc416282509fcd8462cb5a\"\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  \r",
							"});\r",
							"\r",
							"/*$.ajax({\r",
							"  type: 'POST',\r",
							"  url: environment.auth_url ,\r",
							"  data: {\r",
							"      grant_type: environment.grant_type,\r",
							"     // username: environment.api_username,\r",
							"     // password: environment.api_password,\r",
							"      client_id: environment.api_client_id,\r",
							"      client_secret: environment.api_client_secret\r",
							"  },\r",
							"  async: false\r",
							"}).done(function(data) {\r",
							"    console.log(\"data::\");\r",
							"    console.log(data);\r",
							"  postman.setEnvironmentVariable(\"access_token\", data.access_token);\r",
							"});\r",
							"\r",
							"\r",
							"// Use backbone to login\r",
							"Login = Backbone.Collection.extend({\r",
							"    url: environment.auth_url\r",
							"});\r",
							"\r",
							"var login = new Login();\r",
							"\r",
							"console.log(login)\r",
							"\r",
							"login.fetch({\r",
							"    beforeSend: function(xhr) {\r",
							"        // use the right content type\r",
							"        xhr.setRequestHeader('Content-Type', 'application/json');\r",
							"    },\r",
							"    type: 'POST',\r",
							"    data: JSON.stringify({\r",
							"        \"grant_type\": environment.grant_type,\r",
							"        \"client_id\": environment.api_client_id,\r",
							"        \"client_secret\": environment.api_client_secret,\r",
							"       // \"username\": environment.api_username,\r",
							"       // \"password\": environment.api_password\r",
							"    }),\r",
							"    success: function(data, array) {\r",
							"        // make it so you can access it via {{access_token}}\r",
							"        console.log(\"In sucess\");\r",
							"        console.log(array.data);\r",
							"        postman.setEnvironmentVariable('access_token', array.data.access_token); \r",
							"    }\r",
							"});*/"
						]
					}
				}
			],
			"request": {
				"url": "{{URL}}/{{VERSION}}/api/distribute",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkpXVFNpZ25pbmdDZXJ0LTIwMTUifQ.eyJjbGllbnRfaWQiOiJzbWFuZGEwMDVjIiwiZXhwIjoxNDk2MTA1NTk0LCJzY29wZSI6WyJvc3N0Iiwib3NzdDp3cml0ZSIsIm9zc3Q6cmVhZCIsIm9zc3Q6aW50ZXJuYWwiXSwiaXNzIjoiUGluZ0ZlZGVyYXRlIn0.YFvocCOmQez-fgEhSx99DH8BZLN8qYpx9UOuC0qM_ZBBzdNDOnZI8gRv2jyPb4wQkwR--xboK6djCaDuw_-e-DAjmr3mzDefI80KMjcuFmN3zfJyGFSWHrJS5NtHZJg_ck3LvL4XZHxtcpcOSMS4EWF8OnHYdYgf9DFz0CgsAjAJf-zgQCGkPNX1laXLmwZHVq9Gzwt50qYgfY02j143iwpLS6FXWhnq6z7mPVNDZPPg6zOalFdOB1ZaxJc_nkAxmuiUVIaEm72JCCUcZOIbNpGOPAG7nMNAxoGfATjEto21cu4cPYvtKN-woM1TKgh_etsFWEkMfL2bACcUGIsL1g",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"requests\": [\n      {\n         \"category\":\"read\",\n         \"ip\": \"{{ip}}\",\n         \"delay\":\"100\",\n         \"operationList\": [\n            {\n               \"operationName\": \"get\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"3000\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3\"\n            },\n            {\n               \"operationName\": \"getBulk\",\n               \"community\": \"K9WAcU6u\",\n               \"snmptimeout\": \"3000\",\n               \"retries\": \"0\",\n               \"partitions\": \"1\",\n               \"maxrepetitions\":\"10\",\n               \"throttle\": \"1\",\n               \"responsetimeout\": \"5000\",\n               \"oid\": \"1.3.6.1.2.1.10.127.1.1.1.1.6.3,1.3.6.1.2.1.1.1.0,1.3.6.1.2.1.1.2.0\"\n            }\n         ]\n      }\n   ]\n}"
				},
				"description": "distribute"
			},
			"response": []
		}
	]
}